name: Docker Build & Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'Enviroments/dev/docker/**'
      - 'Enviroments/dev/kubernetes/**'
      - '.github/workflows/app_build.yaml'

jobs:
  docker-build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./Enviroments/dev/docker
          file: ./Enviroments/dev/docker/Dockerfile.yaml
          push: true
          tags: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/api-hola-mundo:latest

  deploy-docker-to-aks:
    name: Deploy Docker Image to AKS
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az aks get-credentials --resource-group aks-dev --name aks-dev-cluster --admin --overwrite-existing --file /tmp/kubeconfig
            chmod 600 /tmp/kubeconfig

      - name: Set KUBECONFIG Environment Variable
        run: echo "KUBECONFIG=/tmp/kubeconfig" >> $GITHUB_ENV
      

      - name: Verificar y Usar Contexto de Kubernetes
        run: |
          kubectl config get-contexts --kubeconfig /tmp/kubeconfig
          kubectl config use-context aks-dev-cluster-admin --kubeconfig /tmp/kubeconfig
          
      
      - name: Verify Kubernetes Cluster Access
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy to AKS
        run: |
          sed -i 's#<AZURE_REGISTRY_LOGIN_SERVER>#${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}#g' ./Enviroments/dev/kubernetes/flask-app/app_flask_deployment.yaml 
          kubectl apply -f ./Enviroments/dev/kubernetes/namespace.yaml --validate=false
          kubectl apply -f ./Enviroments/dev/kubernetes/flask-app/svc-flask-app.yaml --validate=false
          kubectl apply -f ./Enviroments/dev/kubernetes/flask-app/app_flask_deployment.yaml --validate=false
          kubectl set image deployment/flask-deployment python-web-page=${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/api-hola-mundo:latest
